[
  {
    "short_name" : "RegisterRestCallback",
    "implementation" : "RegisterRestCallback",
    "documentation" : {
      "description" : [ "Register a REST callback." ],
      "args" : {
        "pathRegularExpression" : "Regular expression for the URI. May contain groups.",
        "callback" : "The callback function to handle the REST call."
      }
    },
    "args" : [
      {
        "sdk_name" : "pathRegularExpression",
        "sdk_type" : "const char *"
      },
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "RestCallback",
        "callable_protocol_args" : "output: RestOutput, url: str, method: HttpMethod, groups: dict, get: dict, headers: dict, body: bytes=None",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "short_name" : "RegisterOnChangeCallback",
    "implementation" : "RegisterOnChangeCallback",
    "documentation" : {
      "description" : [ "Register a callback to monitor changes." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "OnChangeCallback",
        "callable_protocol_args" : "change_type: ChangeType, resource_type: ResourceType, resource_id: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "short_name" : "RegisterOnStoredInstanceCallback",
    "implementation" : "RegisterOnStoredInstanceCallback",
    "documentation" : {
      "description" : [ "Register a callback for received DICOM instances." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "OnStoredInstanceCallback",
        "callable_protocol_args" : "instance: DicomInstance, instance_id: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.0",
    "short_name" : "RegisterIncomingHttpRequestFilter",
    "implementation" : "RegisterIncomingHttpRequestFilter",
    "documentation" : {
      "description" : [ "Callback to filter incoming HTTP requests received by Orthanc." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "IncomingHttpRequestFilter",
        "callable_protocol_args" : "uri: str, method: HttpMethod, ip: str, headers: dict, get: dict",
        "callable_protocol_return" : "bool"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "LookupDictionary",
    "implementation" : "LookupDictionary",
    "documentation" : {
      "description" : [ "Get information about the given DICOM tag." ],
      "args" : {
        "name" : "The name of the DICOM tag."
      },
      "return" : "Dictionary containing the requested information."
    },
    "args" : [
      {
        "sdk_name" : "name",
        "sdk_type" : "const char *"
      }
    ],
    "return_sdk_type" : "Dictionary"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "CreateImageFromBuffer",
    "implementation" : "CreateImageFromBuffer",
    "documentation" : {
      "description" : [ "This function creates an image of given size and format, and initializes its pixel data from a memory buffer." ],
      "args" : {
        "format" : "The format of the pixels.",
        "width" : "The width of the image.",
        "height" : "The height of the image.",
        "pitch" : "The pitch of the image (i.e. the number of bytes between 2 successive lines of the image in the memory buffer).",
        "buffer" : "The memory buffer."
      },
      "return" : "The newly allocated image."
    },
    "args" : [
      {
        "sdk_name" : "format",
        "sdk_type" : "enumeration",
        "sdk_enumeration" : "OrthancPluginPixelFormat"
      },
      {
        "sdk_name" : "width",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "height",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "pitch",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "buffer",
        "sdk_type" : "const void *"
      }
    ],
    "return_sdk_type" : "object",
    "return_sdk_class" : "OrthancPluginImage"
  }
]
