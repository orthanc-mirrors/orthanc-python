[
  {
    "short_name" : "RegisterRestCallback",
    "implementation" : "RegisterRestCallback",
    "documentation" : {
      "description" : [ "Register a REST callback." ],
      "args" : {
        "pathRegularExpression" : "Regular expression for the URI. May contain groups.",
        "callback" : "The callback function to handle the REST call."
      }
    },
    "args" : [
      {
        "sdk_name" : "pathRegularExpression",
        "sdk_type" : "const char *"
      },
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "RestCallback",
        "callable_protocol_args" : "output: RestOutput, url: str, method: HttpMethod, groups: dict, get: dict, headers: dict, body: bytes=None",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "short_name" : "RegisterOnChangeCallback",
    "implementation" : "RegisterOnChangeCallback",
    "documentation" : {
      "description" : [ "Register a callback to monitor changes." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "OnChangeCallback",
        "callable_protocol_args" : "change_type: ChangeType, resource_type: ResourceType, resource_id: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "short_name" : "RegisterOnStoredInstanceCallback",
    "implementation" : "RegisterOnStoredInstanceCallback",
    "documentation" : {
      "description" : [ "Register a callback for received DICOM instances." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "OnStoredInstanceCallback",
        "callable_protocol_args" : "instance: DicomInstance, instance_id: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.0",
    "short_name" : "RegisterIncomingHttpRequestFilter",
    "implementation" : "RegisterIncomingHttpRequestFilter",
    "documentation" : {
      "description" : [ "Callback to filter incoming HTTP requests received by Orthanc." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "IncomingHttpRequestFilter",
        "callable_protocol_args" : "uri: str, method: HttpMethod, ip: str, headers: dict, get: dict",
        "callable_protocol_return" : "bool"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "LookupDictionary",
    "implementation" : "LookupDictionary",
    "documentation" : {
      "description" : [ "Get information about the given DICOM tag." ],
      "args" : {
        "name" : "The name of the DICOM tag."
      },
      "return" : "Dictionary containing the requested information."
    },
    "args" : [
      {
        "sdk_name" : "name",
        "sdk_type" : "const char *"
      }
    ],
    "return_sdk_type" : "Dictionary"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "CreateImageFromBuffer",
    "implementation" : "CreateImageFromBuffer",
    "documentation" : {
      "description" : [ "This function creates an image of given size and format, and initializes its pixel data from a memory buffer." ],
      "args" : {
        "format" : "The format of the pixels.",
        "width" : "The width of the image.",
        "height" : "The height of the image.",
        "pitch" : "The pitch of the image (i.e. the number of bytes between 2 successive lines of the image in the memory buffer).",
        "buffer" : "The memory buffer."
      },
      "return" : "The newly allocated image."
    },
    "args" : [
      {
        "sdk_name" : "format",
        "sdk_type" : "enumeration",
        "sdk_enumeration" : "OrthancPluginPixelFormat"
      },
      {
        "sdk_name" : "width",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "height",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "pitch",
        "sdk_type" : "uint32_t"
      },
      {
        "sdk_name" : "buffer",
        "sdk_type" : "const void *"
      }
    ],
    "return_sdk_type" : "object",
    "return_sdk_class" : "OrthancPluginImage"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "RegisterFindCallback",
    "implementation" : "RegisterFindCallback",
    "documentation" : {
      "description" : [ "Register a callback to handle C-Find requests." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "FindCallback",
        "callable_protocol_args" : "answers: FindAnswers, query: FindQuery, issuer_aet: str, called_aet: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "RegisterMoveCallback",
    "implementation" : "RegisterMoveCallback",
    "documentation" : {
      "description" : [ "Register a callback to handle C-Move requests (simple version, with 1 suboperation)." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "MoveCallback",
        "callable_protocol_args" : "Level: str, PatientID: str, AccessionNumber: str, StudyInstanceUID: str, SeriesInstanceUID: str, SOPInstanceUID: str, OriginatorAET: str, SourceAET: str, TargetAET: str, OriginatorID: int",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "RegisterMoveCallback2",
    "implementation" : "RegisterMoveCallback2",
    "documentation" : {
      "description" : [ "Register a callback to handle C-Move requests (full version, with multiple suboperations)." ],
      "args" : {
        "callback" : "Main callback that creates the C-Move driver.",
        "get_move_size" : "Callback to read the number of C-Move suboperations.",
        "apply_move" : "Callback to apply one C-Move suboperation.",
        "free_move" : "Callback to free the C-Move driver."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "MoveCallback2",
        "callable_protocol_args" : "Level: str, PatientID: str, AccessionNumber: str, StudyInstanceUID: str, SeriesInstanceUID: str, SOPInstanceUID: str, OriginatorAET: str, SourceAET: str, TargetAET: str, OriginatorID: int",
        "callable_protocol_return" : "object",  "comment" : "This is the newly created C-Move driver."
      },
      {
        "sdk_name" : "get_move_size",
        "sdk_type" : "Callable",
        "callable_type" : "GetMoveSizeCallback",
        "callable_protocol_args" : "driver: object",
        "callable_protocol_return" : "int"
      },
      {
        "sdk_name" : "apply_move",
        "sdk_type" : "Callable",
        "callable_type" : "ApplyMoveCallback",
        "callable_protocol_args" : "driver: object",
        "callable_protocol_return" : "None"
      },
      {
        "sdk_name" : "free_move",
        "sdk_type" : "Callable",
        "callable_type" : "FreeMoveCallback",
        "callable_protocol_args" : "driver: object",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.2",
    "short_name" : "RegisterWorklistCallback",
    "implementation" : "RegisterWorklistCallback",
    "documentation" : {
      "description" : [ "Register a callback to handle modality worklists requests." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "WorklistCallback",
        "callable_protocol_args" : "answers: WorklistAnswers, query: WorklistQuery, issuer_aet: str, called_aet: str",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 3.3",
    "short_name" : "RegisterStorageArea",
    "implementation" : "RegisterStorageArea",
    "documentation" : {
      "description" : [ "Register a custom storage area." ],
      "args" : {
        "create" : "The callback function to store a file on the custom storage area.",
        "read" : "The callback function to read a file from the custom storage area.",
        "remove" : "The callback function to remove a file from the custom storage area."
      }
    },
    "args" : [
      {
        "sdk_name" : "create",
        "sdk_type" : "Callable",
        "callable_type" : "StorageCreateCallback",
        "callable_protocol_args" : "uuid: str, content_type: ContentType, data: bytes",
        "callable_protocol_return" : "None"
      },
      {
        "sdk_name" : "read",
        "sdk_type" : "Callable",
        "callable_type" : "StorageReadCallback",
        "callable_protocol_args" : "uuid: str, content_type: ContentType",
        "callable_protocol_return" : "bytes"
      },
      {
        "sdk_name" : "remove",
        "sdk_type" : "Callable",
        "callable_type" : "StorageRemoveCallback",
        "callable_protocol_args" : "uuid: str, content_type: ContentType",
        "callable_protocol_return" : "None"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 4.0",
    "short_name" : "RegisterIncomingCStoreInstanceFilter",
    "implementation" : "RegisterIncomingCStoreInstanceFilter",
    "documentation" : {
      "description" : [ "Register a callback to filter incoming DICOM instances received by Orthanc through C-STORE." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "IncomingCStoreInstanceFilter",
        "callable_protocol_args" : "received_dicom: DicomInstance",
        "callable_protocol_return" : "int"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 4.0",
    "short_name" : "RegisterReceivedInstanceCallback",
    "implementation" : "RegisterReceivedInstanceCallback",
    "documentation" : {
      "description" : [ "Register a callback to keep/discard/modify a DICOM instance received by Orthanc from any source (C-STORE or REST API)." ],
      "args" : {
        "callback" : "The callback function."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "ReceivedInstanceCallback",
        "callable_protocol_args" : "received_dicom: bytes, origin: InstanceOrigin",
        "callable_protocol_return" : "tuple[ReceivedInstanceAction, bytes]"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 4.1",
    "short_name" : "RegisterStorageCommitmentScpCallback",
    "implementation" : "RegisterStorageCommitmentScpCallback",
    "documentation" : {
      "description" : [ "Register a callback to handle incoming requests to the storage commitment SCP." ],
      "args" : {
        "callback" : "Main callback that creates the a driver to handle an incoming storage commitment request.",
        "lookup" : "Callback function to get the status of one DICOM instance."
      }
    },
    "args" : [
      {
        "sdk_name" : "callback",
        "sdk_type" : "Callable",
        "callable_type" : "StorageCommitmentScpCallback",
        "callable_protocol_args" : "job_id: str, transaction_uid: str, sop_class_uids: list[str], sop_instance_uids: list[str], remote_aet: str, called_aet: str",
        "callable_protocol_return" : "object",  "comment" : "This is the newly created storage commitment driver."
      },
      {
        "sdk_name" : "lookup",
        "sdk_type" : "Callable",
        "callable_type" : "StorageCommitmentLookup",
        "callable_protocol_args" : "sop_class_uid: str, sop_instance_uid: str, driver: object",
        "callable_protocol_return" : "StorageCommitmentFailureReason"
      }
    ],
    "return_sdk_type" : "void"
  },

  {
    "comment" : "New in release 6.0",
    "short_name" : "SetStableStatus",
    "implementation" : "SetStableStatus",
    "documentation" : {
      "description" : [ "Change the Stable status of a resource" ],
      "args" : {
        "resourceId" : "The id of the resource.",
        "stableStatus" : "The new stable status: 0 for Stable, 1 for Unstable."
      },
      "return" : "A tuple with (The error code, An integer indicating wheter the status has changed (1) or not (0) during the execution of this command)."
    },
    "args" : [
      {
        "sdk_name" : "resourceId",
        "sdk_type" : "const char *"
      },
      {
        "sdk_name" : "stableStatus",
        "sdk_type" : "enumeration",
        "sdk_enumeration" : "OrthancPluginStableStatus"
      }
    ],
    "return_sdk_type" : "Tuple"
  }

]
